-- Double_Digit_Counter.vhdl
library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_unsigned.all;

entity Double_Digit_Counter is
  port
  (
    c_Input       : in std_logic;
    c_Direction   : in std_logic;
    c_Init        : in std_logic;
    c_Enable_Ones : in std_logic;
    c_Q_Out_Tens  : out integer;
    c_Q_Out_Ones  : out integer;
    Q_Out         : out integer
  );
end entity Double_Digit_Counter;

architecture behaviour of Double_Digit_Counter is
  component BCD_Counter is
    port
    (
      Clk, Direction, Init, Enable : in std_logic;
      Q_Out                        : out integer
    );
  end component;

  signal ones_output           : integer; -- Internal signal to hold c_Q_Out_Ones
  signal tens_output           : integer;
  signal enable_tens_condition : std_logic; -- Signal to hold the condition for enabling BCD_Counter_Tens
begin
  BCD_Counter_Ones : BCD_Counter port map
  (
    Clk       => c_Input,
    Direction => c_Direction,
    Init      => c_Init,
    Enable    => c_Enable_Ones,
    Q_Out     => ones_output
  );
  -- Generate the condition for enabling BCD_Counter_Tens
  enable_tens_condition <= '1' when ones_output = 0 else
    '0';
  BCD_Counter_Tens : BCD_Counter port
  map
  (
  Clk       => c_Input,
  Direction => c_Direction,
  Init      => c_Init,
  Enable    => enable_tens_condition,
  Q_Out     => tens_output
  );

  c_Q_Out_Tens <= tens_output;
  c_Q_Out_Ones <= ones_output;
  Q_Out        <= (tens_output * 10) + ones_output;
end architecture behaviour;